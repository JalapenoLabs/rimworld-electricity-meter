name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  verify:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version:
          - '1.6'

    steps:
      # ######################### #
      #        Setup Phase        #
      # ######################### #

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          submodules: 'recursive'

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Trust GitHub's host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Setup Rimworld DLL
        working-directory: ../..
        run: |
          git clone git@github.com:JalapenoLabs/RimworldForCICD.git RimWorldWin64_Data

      # ######################### #
      #     Pre-build Metrics     #
      # ######################### #

      # - name: Record original DLL checksum
      #   id: dll_hash
      #   run: |
      #     sha256sum 1.6/Assemblies/FishingIsFun.dll \
      #       | cut -d' ' -f1 \
      #       | tee original.hash
      #     echo "hash=$(cat original.hash)" >> $GITHUB_OUTPUT

      # ######################### #
      #        Build Phase        #
      # ######################### #

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Update .vscode/mod.csproj, replace all '1.6' to the matrix version
      - name: Modify mod.csproj
        run: |
          cp .vscode/mod.csproj .vscode/mod.backup
          sed -i 's/1.6/${{ matrix.version }}/g' .vscode/mod.csproj
          cat .vscode/mod.csproj
          echo "==================== DIFF ===================="
          diff -u .vscode/mod.backup .vscode/mod.csproj || true

      - name: Dotnet restore
        run: dotnet restore .vscode

      - name: Build
        run: dotnet build .vscode

      # ######################### #
      #      Validation Phase     #
      # ######################### #

      - name: Validate XML (xmllint)
        uses: phpcsstandards/xmllint-validate@v1
        with:
          pattern: "${{ matrix.version }}/Defs/*.xml"
          show-in-pr: true

      - name: Validate XML (xmllint)
        uses: phpcsstandards/xmllint-validate@v1
        with:
          pattern: "About/About.xml"
          show-in-pr: true

      # ######################### #
      #      Check for changes    #
      # ######################### #

      # - name: Fail if DLL changed
      #   run: |
      #     new=$(sha256sum 1.6/Assemblies/FishingIsFun.dll | cut -d' ' -f1)
      #     echo "Original: ${{ steps.dll_hash.outputs.hash }}"
      #     echo "Current:  $new"
      #     if [ "$new" != "${{ steps.dll_hash.outputs.hash }}" ]; then
      #       echo "::error title=DLL Changed::FishingIsFun.dll was modified by the build"
      #       exit 1
      #     fi
